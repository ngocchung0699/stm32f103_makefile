ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczxAq55.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"gpio.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.GPIO_Config,"ax",%progbits
  18              		.align	1
  19              		.global	GPIO_Config
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	GPIO_Config:
  25              	.LFB65:
  26              		.file 1 "Lib/src/gpio.c"
   1:Lib/src/gpio.c **** #include "gpio.h"
   2:Lib/src/gpio.c **** 
   3:Lib/src/gpio.c **** void GPIO_Config(GPIO_TypeDef *GPIOx, uint8_t GPIO_Mode, uint16_t GPIO_Pin)
   4:Lib/src/gpio.c **** {
  27              		.loc 1 4 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 84B0     		sub	sp, sp, #16
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  43 0008 0B46     		mov	r3, r1
  44 000a FB70     		strb	r3, [r7, #3]
  45 000c 1346     		mov	r3, r2	@ movhi
  46 000e 3B80     		strh	r3, [r7]	@ movhi
   5:Lib/src/gpio.c ****     /* Check the parameters */
   6:Lib/src/gpio.c ****     assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
   7:Lib/src/gpio.c ****     assert_param(IS_GPIO_PIN(GPIO_Pin));
   8:Lib/src/gpio.c **** 
   9:Lib/src/gpio.c ****     if (GPIOx == GPIOA)
  47              		.loc 1 9 8
  48 0010 7B68     		ldr	r3, [r7, #4]
  49 0012 274A     		ldr	r2, .L9
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczxAq55.s 			page 2


  50 0014 9342     		cmp	r3, r2
  51 0016 04D1     		bne	.L2
  10:Lib/src/gpio.c ****     {
  11:Lib/src/gpio.c ****         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
  52              		.loc 1 11 9
  53 0018 0121     		movs	r1, #1
  54 001a 0420     		movs	r0, #4
  55 001c FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  56 0020 35E0     		b	.L3
  57              	.L2:
  12:Lib/src/gpio.c ****     }
  13:Lib/src/gpio.c ****     else if (GPIOx == GPIOB)
  58              		.loc 1 13 13
  59 0022 7B68     		ldr	r3, [r7, #4]
  60 0024 234A     		ldr	r2, .L9+4
  61 0026 9342     		cmp	r3, r2
  62 0028 04D1     		bne	.L4
  14:Lib/src/gpio.c ****     {
  15:Lib/src/gpio.c ****         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
  63              		.loc 1 15 9
  64 002a 0121     		movs	r1, #1
  65 002c 0820     		movs	r0, #8
  66 002e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  67 0032 2CE0     		b	.L3
  68              	.L4:
  16:Lib/src/gpio.c ****     }
  17:Lib/src/gpio.c ****     else if (GPIOx == GPIOC)
  69              		.loc 1 17 13
  70 0034 7B68     		ldr	r3, [r7, #4]
  71 0036 204A     		ldr	r2, .L9+8
  72 0038 9342     		cmp	r3, r2
  73 003a 04D1     		bne	.L5
  18:Lib/src/gpio.c ****     {
  19:Lib/src/gpio.c ****         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
  74              		.loc 1 19 9
  75 003c 0121     		movs	r1, #1
  76 003e 1020     		movs	r0, #16
  77 0040 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  78 0044 23E0     		b	.L3
  79              	.L5:
  20:Lib/src/gpio.c ****     }
  21:Lib/src/gpio.c ****     else if (GPIOx == GPIOD)
  80              		.loc 1 21 13
  81 0046 7B68     		ldr	r3, [r7, #4]
  82 0048 1C4A     		ldr	r2, .L9+12
  83 004a 9342     		cmp	r3, r2
  84 004c 04D1     		bne	.L6
  22:Lib/src/gpio.c ****     {
  23:Lib/src/gpio.c ****         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);
  85              		.loc 1 23 9
  86 004e 0121     		movs	r1, #1
  87 0050 2020     		movs	r0, #32
  88 0052 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  89 0056 1AE0     		b	.L3
  90              	.L6:
  24:Lib/src/gpio.c ****     }
  25:Lib/src/gpio.c ****     else if (GPIOx == GPIOE)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczxAq55.s 			page 3


  91              		.loc 1 25 13
  92 0058 7B68     		ldr	r3, [r7, #4]
  93 005a 194A     		ldr	r2, .L9+16
  94 005c 9342     		cmp	r3, r2
  95 005e 04D1     		bne	.L7
  26:Lib/src/gpio.c ****     {
  27:Lib/src/gpio.c ****         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOE, ENABLE);
  96              		.loc 1 27 9
  97 0060 0121     		movs	r1, #1
  98 0062 4020     		movs	r0, #64
  99 0064 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 100 0068 11E0     		b	.L3
 101              	.L7:
  28:Lib/src/gpio.c ****     }
  29:Lib/src/gpio.c ****     else if (GPIOx == GPIOF)
 102              		.loc 1 29 13
 103 006a 7B68     		ldr	r3, [r7, #4]
 104 006c 154A     		ldr	r2, .L9+20
 105 006e 9342     		cmp	r3, r2
 106 0070 04D1     		bne	.L8
  30:Lib/src/gpio.c ****     {
  31:Lib/src/gpio.c ****         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF, ENABLE);
 107              		.loc 1 31 9
 108 0072 0121     		movs	r1, #1
 109 0074 8020     		movs	r0, #128
 110 0076 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 111 007a 08E0     		b	.L3
 112              	.L8:
  32:Lib/src/gpio.c ****     }
  33:Lib/src/gpio.c ****     else if (GPIOx == GPIOG)
 113              		.loc 1 33 13
 114 007c 7B68     		ldr	r3, [r7, #4]
 115 007e 124A     		ldr	r2, .L9+24
 116 0080 9342     		cmp	r3, r2
 117 0082 04D1     		bne	.L3
  34:Lib/src/gpio.c ****     {
  35:Lib/src/gpio.c ****         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOG, ENABLE);
 118              		.loc 1 35 9
 119 0084 0121     		movs	r1, #1
 120 0086 4FF48070 		mov	r0, #256
 121 008a FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 122              	.L3:
  36:Lib/src/gpio.c ****     }
  37:Lib/src/gpio.c **** 
  38:Lib/src/gpio.c ****     GPIO_InitTypeDef gpioInit;
  39:Lib/src/gpio.c **** 
  40:Lib/src/gpio.c ****     gpioInit.GPIO_Mode = GPIO_Mode;
 123              		.loc 1 40 24
 124 008e FB78     		ldrb	r3, [r7, #3]
 125 0090 FB73     		strb	r3, [r7, #15]
  41:Lib/src/gpio.c ****     gpioInit.GPIO_Pin = GPIO_Pin;
 126              		.loc 1 41 23
 127 0092 3B88     		ldrh	r3, [r7]	@ movhi
 128 0094 BB81     		strh	r3, [r7, #12]	@ movhi
  42:Lib/src/gpio.c ****     gpioInit.GPIO_Speed = GPIO_Speed_50MHz;
 129              		.loc 1 42 25
 130 0096 0323     		movs	r3, #3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczxAq55.s 			page 4


 131 0098 BB73     		strb	r3, [r7, #14]
  43:Lib/src/gpio.c ****     GPIO_Init(GPIOx, &gpioInit);
 132              		.loc 1 43 5
 133 009a 07F10C03 		add	r3, r7, #12
 134 009e 1946     		mov	r1, r3
 135 00a0 7868     		ldr	r0, [r7, #4]
 136 00a2 FFF7FEFF 		bl	GPIO_Init
  44:Lib/src/gpio.c **** }
 137              		.loc 1 44 1
 138 00a6 00BF     		nop
 139 00a8 1037     		adds	r7, r7, #16
 140              	.LCFI3:
 141              		.cfi_def_cfa_offset 8
 142 00aa BD46     		mov	sp, r7
 143              	.LCFI4:
 144              		.cfi_def_cfa_register 13
 145              		@ sp needed
 146 00ac 80BD     		pop	{r7, pc}
 147              	.L10:
 148 00ae 00BF     		.align	2
 149              	.L9:
 150 00b0 00080140 		.word	1073809408
 151 00b4 000C0140 		.word	1073810432
 152 00b8 00100140 		.word	1073811456
 153 00bc 00140140 		.word	1073812480
 154 00c0 00180140 		.word	1073813504
 155 00c4 001C0140 		.word	1073814528
 156 00c8 00200140 		.word	1073815552
 157              		.cfi_endproc
 158              	.LFE65:
 160              		.section	.text.GPIO_Enable,"ax",%progbits
 161              		.align	1
 162              		.global	GPIO_Enable
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	GPIO_Enable:
 168              	.LFB66:
  45:Lib/src/gpio.c **** 
  46:Lib/src/gpio.c **** /**
  47:Lib/src/gpio.c ****  * @brief  Sets the selected data port bits.
  48:Lib/src/gpio.c ****  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
  49:Lib/src/gpio.c ****  * @param  GPIO_Pin: specifies the port bits to be written.
  50:Lib/src/gpio.c ****  *   This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
  51:Lib/src/gpio.c ****  * @retval None
  52:Lib/src/gpio.c ****  */
  53:Lib/src/gpio.c **** void GPIO_Enable(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
  54:Lib/src/gpio.c **** {
 169              		.loc 1 54 1
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 8
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 80B4     		push	{r7}
 175              	.LCFI5:
 176              		.cfi_def_cfa_offset 4
 177              		.cfi_offset 7, -4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczxAq55.s 			page 5


 178 0002 83B0     		sub	sp, sp, #12
 179              	.LCFI6:
 180              		.cfi_def_cfa_offset 16
 181 0004 00AF     		add	r7, sp, #0
 182              	.LCFI7:
 183              		.cfi_def_cfa_register 7
 184 0006 7860     		str	r0, [r7, #4]
 185 0008 0B46     		mov	r3, r1
 186 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  55:Lib/src/gpio.c ****     /* Check the parameters */
  56:Lib/src/gpio.c ****     assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  57:Lib/src/gpio.c ****     assert_param(IS_GPIO_PIN(GPIO_Pin));
  58:Lib/src/gpio.c **** 
  59:Lib/src/gpio.c ****     GPIOx->BSRR = GPIO_Pin;
 187              		.loc 1 59 17
 188 000c 7A88     		ldrh	r2, [r7, #2]
 189 000e 7B68     		ldr	r3, [r7, #4]
 190 0010 1A61     		str	r2, [r3, #16]
  60:Lib/src/gpio.c **** }
 191              		.loc 1 60 1
 192 0012 00BF     		nop
 193 0014 0C37     		adds	r7, r7, #12
 194              	.LCFI8:
 195              		.cfi_def_cfa_offset 4
 196 0016 BD46     		mov	sp, r7
 197              	.LCFI9:
 198              		.cfi_def_cfa_register 13
 199              		@ sp needed
 200 0018 80BC     		pop	{r7}
 201              	.LCFI10:
 202              		.cfi_restore 7
 203              		.cfi_def_cfa_offset 0
 204 001a 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE66:
 208              		.section	.text.GPIO_Disable,"ax",%progbits
 209              		.align	1
 210              		.global	GPIO_Disable
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	GPIO_Disable:
 216              	.LFB67:
  61:Lib/src/gpio.c **** 
  62:Lib/src/gpio.c **** /**
  63:Lib/src/gpio.c ****  * @brief  Clears the selected data port bits.
  64:Lib/src/gpio.c ****  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
  65:Lib/src/gpio.c ****  * @param  GPIO_Pin: specifies the port bits to be written.
  66:Lib/src/gpio.c ****  *   This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
  67:Lib/src/gpio.c ****  * @retval None
  68:Lib/src/gpio.c ****  */
  69:Lib/src/gpio.c **** void GPIO_Disable(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
  70:Lib/src/gpio.c **** {
 217              		.loc 1 70 1
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 8
 220              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczxAq55.s 			page 6


 221              		@ link register save eliminated.
 222 0000 80B4     		push	{r7}
 223              	.LCFI11:
 224              		.cfi_def_cfa_offset 4
 225              		.cfi_offset 7, -4
 226 0002 83B0     		sub	sp, sp, #12
 227              	.LCFI12:
 228              		.cfi_def_cfa_offset 16
 229 0004 00AF     		add	r7, sp, #0
 230              	.LCFI13:
 231              		.cfi_def_cfa_register 7
 232 0006 7860     		str	r0, [r7, #4]
 233 0008 0B46     		mov	r3, r1
 234 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  71:Lib/src/gpio.c ****     /* Check the parameters */
  72:Lib/src/gpio.c ****     assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  73:Lib/src/gpio.c ****     assert_param(IS_GPIO_PIN(GPIO_Pin));
  74:Lib/src/gpio.c **** 
  75:Lib/src/gpio.c ****     GPIOx->BRR = GPIO_Pin;
 235              		.loc 1 75 16
 236 000c 7A88     		ldrh	r2, [r7, #2]
 237 000e 7B68     		ldr	r3, [r7, #4]
 238 0010 5A61     		str	r2, [r3, #20]
  76:Lib/src/gpio.c **** }
 239              		.loc 1 76 1
 240 0012 00BF     		nop
 241 0014 0C37     		adds	r7, r7, #12
 242              	.LCFI14:
 243              		.cfi_def_cfa_offset 4
 244 0016 BD46     		mov	sp, r7
 245              	.LCFI15:
 246              		.cfi_def_cfa_register 13
 247              		@ sp needed
 248 0018 80BC     		pop	{r7}
 249              	.LCFI16:
 250              		.cfi_restore 7
 251              		.cfi_def_cfa_offset 0
 252 001a 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE67:
 256              		.section	.text.GPIO_TogglePin,"ax",%progbits
 257              		.align	1
 258              		.global	GPIO_TogglePin
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 263              	GPIO_TogglePin:
 264              	.LFB68:
  77:Lib/src/gpio.c **** 
  78:Lib/src/gpio.c **** /**
  79:Lib/src/gpio.c ****  * @brief  Toggles the specified GPIO pin
  80:Lib/src/gpio.c ****  * @param  GPIOx: where x can be (A..G depending on device used) to select the GPIO peripheral
  81:Lib/src/gpio.c ****  * @param  GPIO_Pin: Specifies the pins to be toggled.
  82:Lib/src/gpio.c ****  * @retval None
  83:Lib/src/gpio.c ****  */
  84:Lib/src/gpio.c **** void GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
  85:Lib/src/gpio.c **** {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczxAq55.s 			page 7


 265              		.loc 1 85 1
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 16
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270 0000 80B4     		push	{r7}
 271              	.LCFI17:
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 7, -4
 274 0002 85B0     		sub	sp, sp, #20
 275              	.LCFI18:
 276              		.cfi_def_cfa_offset 24
 277 0004 00AF     		add	r7, sp, #0
 278              	.LCFI19:
 279              		.cfi_def_cfa_register 7
 280 0006 7860     		str	r0, [r7, #4]
 281 0008 0B46     		mov	r3, r1
 282 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  86:Lib/src/gpio.c ****     uint32_t odr;
  87:Lib/src/gpio.c **** 
  88:Lib/src/gpio.c ****     /* Check the parameters */
  89:Lib/src/gpio.c ****     assert_param(IS_GPIO_PIN(GPIO_Pin));
  90:Lib/src/gpio.c **** 
  91:Lib/src/gpio.c ****     /* get current Output Data Register value */
  92:Lib/src/gpio.c ****     odr = GPIOx->ODR;
 283              		.loc 1 92 9
 284 000c 7B68     		ldr	r3, [r7, #4]
 285 000e DB68     		ldr	r3, [r3, #12]
 286 0010 FB60     		str	r3, [r7, #12]
  93:Lib/src/gpio.c **** 
  94:Lib/src/gpio.c ****     /* Set selected pins that were at low level, and reset ones that were high */
  95:Lib/src/gpio.c ****     GPIOx->BSRR = ((odr & GPIO_Pin) << 16u) | (~odr & GPIO_Pin);
 287              		.loc 1 95 25
 288 0012 7A88     		ldrh	r2, [r7, #2]
 289 0014 FB68     		ldr	r3, [r7, #12]
 290 0016 1340     		ands	r3, r3, r2
 291              		.loc 1 95 37
 292 0018 1A04     		lsls	r2, r3, #16
 293              		.loc 1 95 48
 294 001a FB68     		ldr	r3, [r7, #12]
 295 001c D943     		mvns	r1, r3
 296              		.loc 1 95 53
 297 001e 7B88     		ldrh	r3, [r7, #2]
 298 0020 0B40     		ands	r3, r3, r1
 299              		.loc 1 95 45
 300 0022 1A43     		orrs	r2, r2, r3
 301              		.loc 1 95 17
 302 0024 7B68     		ldr	r3, [r7, #4]
 303 0026 1A61     		str	r2, [r3, #16]
  96:Lib/src/gpio.c **** }
 304              		.loc 1 96 1
 305 0028 00BF     		nop
 306 002a 1437     		adds	r7, r7, #20
 307              	.LCFI20:
 308              		.cfi_def_cfa_offset 4
 309 002c BD46     		mov	sp, r7
 310              	.LCFI21:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczxAq55.s 			page 8


 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 002e 80BC     		pop	{r7}
 314              	.LCFI22:
 315              		.cfi_restore 7
 316              		.cfi_def_cfa_offset 0
 317 0030 7047     		bx	lr
 318              		.cfi_endproc
 319              	.LFE68:
 321              		.section	.text.GPIO_Lock,"ax",%progbits
 322              		.align	1
 323              		.global	GPIO_Lock
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 328              	GPIO_Lock:
 329              	.LFB69:
  97:Lib/src/gpio.c **** 
  98:Lib/src/gpio.c **** /**
  99:Lib/src/gpio.c ****  * @brief  Locks GPIO Pins configuration registers.
 100:Lib/src/gpio.c ****  * @note   The locking mechanism allows the IO configuration to be frozen. When the LOCK sequence
 101:Lib/src/gpio.c ****  *         has been applied on a port bit, it is no longer possible to modify the value of the port
 102:Lib/src/gpio.c ****  *         the next reset.
 103:Lib/src/gpio.c ****  * @param  GPIOx: where x can be (A..G depending on device used) to select the GPIO peripheral
 104:Lib/src/gpio.c ****  * @param  GPIO_Pin: specifies the port bit to be locked.
 105:Lib/src/gpio.c ****  *         This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 106:Lib/src/gpio.c ****  * @retval None
 107:Lib/src/gpio.c ****  */
 108:Lib/src/gpio.c **** void GPIO_Lock(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
 109:Lib/src/gpio.c **** {
 330              		.loc 1 109 1
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 8
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335 0000 80B4     		push	{r7}
 336              	.LCFI23:
 337              		.cfi_def_cfa_offset 4
 338              		.cfi_offset 7, -4
 339 0002 83B0     		sub	sp, sp, #12
 340              	.LCFI24:
 341              		.cfi_def_cfa_offset 16
 342 0004 00AF     		add	r7, sp, #0
 343              	.LCFI25:
 344              		.cfi_def_cfa_register 7
 345 0006 7860     		str	r0, [r7, #4]
 346 0008 0B46     		mov	r3, r1
 347 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 110:Lib/src/gpio.c **** }
 348              		.loc 1 110 1
 349 000c 00BF     		nop
 350 000e 0C37     		adds	r7, r7, #12
 351              	.LCFI26:
 352              		.cfi_def_cfa_offset 4
 353 0010 BD46     		mov	sp, r7
 354              	.LCFI27:
 355              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczxAq55.s 			page 9


 356              		@ sp needed
 357 0012 80BC     		pop	{r7}
 358              	.LCFI28:
 359              		.cfi_restore 7
 360              		.cfi_def_cfa_offset 0
 361 0014 7047     		bx	lr
 362              		.cfi_endproc
 363              	.LFE69:
 365              		.section	.text.GPIO_Read,"ax",%progbits
 366              		.align	1
 367              		.global	GPIO_Read
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 372              	GPIO_Read:
 373              	.LFB70:
 111:Lib/src/gpio.c **** 
 112:Lib/src/gpio.c **** /**
 113:Lib/src/gpio.c ****  * @brief  Reads the specified input port pin.
 114:Lib/src/gpio.c ****  * @param  GPIOx: where x can be (A..G depending on device used) to select the GPIO peripheral
 115:Lib/src/gpio.c ****  * @param  GPIO_Pin: specifies the port bit to read.
 116:Lib/src/gpio.c ****  *         This parameter can be GPIO_PIN_x where x can be (0..15).
 117:Lib/src/gpio.c ****  * @retval The input port pin value.
 118:Lib/src/gpio.c ****  */
 119:Lib/src/gpio.c **** uint8_t GPIO_Read(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
 120:Lib/src/gpio.c **** {
 374              		.loc 1 120 1
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 16
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379 0000 80B4     		push	{r7}
 380              	.LCFI29:
 381              		.cfi_def_cfa_offset 4
 382              		.cfi_offset 7, -4
 383 0002 85B0     		sub	sp, sp, #20
 384              	.LCFI30:
 385              		.cfi_def_cfa_offset 24
 386 0004 00AF     		add	r7, sp, #0
 387              	.LCFI31:
 388              		.cfi_def_cfa_register 7
 389 0006 7860     		str	r0, [r7, #4]
 390 0008 0B46     		mov	r3, r1
 391 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 121:Lib/src/gpio.c ****     BitAction status;
 122:Lib/src/gpio.c **** 
 123:Lib/src/gpio.c ****     /* Check the parameters */
 124:Lib/src/gpio.c ****     assert_param(IS_GPIO_PIN(GPIO_Pin));
 125:Lib/src/gpio.c **** 
 126:Lib/src/gpio.c ****     if ((GPIOx->IDR & GPIO_Pin) != (uint8_t)RESET)
 392              		.loc 1 126 15
 393 000c 7B68     		ldr	r3, [r7, #4]
 394 000e 9A68     		ldr	r2, [r3, #8]
 395              		.loc 1 126 21
 396 0010 7B88     		ldrh	r3, [r7, #2]
 397 0012 1340     		ands	r3, r3, r2
 398              		.loc 1 126 8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczxAq55.s 			page 10


 399 0014 002B     		cmp	r3, #0
 400 0016 02D0     		beq	.L16
 127:Lib/src/gpio.c ****     {
 128:Lib/src/gpio.c ****         status = Bit_SET;
 401              		.loc 1 128 16
 402 0018 0123     		movs	r3, #1
 403 001a FB73     		strb	r3, [r7, #15]
 404 001c 01E0     		b	.L17
 405              	.L16:
 129:Lib/src/gpio.c ****     }
 130:Lib/src/gpio.c ****     else
 131:Lib/src/gpio.c ****     {
 132:Lib/src/gpio.c ****         status = Bit_RESET;
 406              		.loc 1 132 16
 407 001e 0023     		movs	r3, #0
 408 0020 FB73     		strb	r3, [r7, #15]
 409              	.L17:
 133:Lib/src/gpio.c ****     }
 134:Lib/src/gpio.c ****     return status;
 410              		.loc 1 134 12
 411 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 135:Lib/src/gpio.c **** }
 412              		.loc 1 135 1
 413 0024 1846     		mov	r0, r3
 414 0026 1437     		adds	r7, r7, #20
 415              	.LCFI32:
 416              		.cfi_def_cfa_offset 4
 417 0028 BD46     		mov	sp, r7
 418              	.LCFI33:
 419              		.cfi_def_cfa_register 13
 420              		@ sp needed
 421 002a 80BC     		pop	{r7}
 422              	.LCFI34:
 423              		.cfi_restore 7
 424              		.cfi_def_cfa_offset 0
 425 002c 7047     		bx	lr
 426              		.cfi_endproc
 427              	.LFE70:
 429              		.section	.text.GPIO_Write_Pin,"ax",%progbits
 430              		.align	1
 431              		.global	GPIO_Write_Pin
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 436              	GPIO_Write_Pin:
 437              	.LFB71:
 136:Lib/src/gpio.c **** 
 137:Lib/src/gpio.c **** /**
 138:Lib/src/gpio.c ****  * @brief  Sets or clears the selected data port bit.
 139:Lib/src/gpio.c ****  *
 140:Lib/src/gpio.c ****  * @note   This function uses GPIOx_BSRR register to allow atomic read/modify
 141:Lib/src/gpio.c ****  *         accesses. In this way, there is no risk of an IRQ occurring between
 142:Lib/src/gpio.c ****  *         the read and the modify access.
 143:Lib/src/gpio.c ****  *
 144:Lib/src/gpio.c ****  * @param  GPIOx: where x can be (A..G depending on device used) to select the GPIO peripheral
 145:Lib/src/gpio.c ****  * @param  GPIO_Pin: specifies the port bit to be written.
 146:Lib/src/gpio.c ****  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczxAq55.s 			page 11


 147:Lib/src/gpio.c ****  * @param  PinState: specifies the value to be written to the selected bit.
 148:Lib/src/gpio.c ****  *          This parameter can be one of the GPIO_PinState enum values:
 149:Lib/src/gpio.c ****  *            @arg GPIO_PIN_RESET: to clear the port pin
 150:Lib/src/gpio.c ****  *            @arg GPIO_PIN_SET: to set the port pin
 151:Lib/src/gpio.c ****  * @retval None
 152:Lib/src/gpio.c ****  */
 153:Lib/src/gpio.c **** void GPIO_Write_Pin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, uint8_t Status)
 154:Lib/src/gpio.c **** {
 438              		.loc 1 154 1
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 8
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 443 0000 80B4     		push	{r7}
 444              	.LCFI35:
 445              		.cfi_def_cfa_offset 4
 446              		.cfi_offset 7, -4
 447 0002 83B0     		sub	sp, sp, #12
 448              	.LCFI36:
 449              		.cfi_def_cfa_offset 16
 450 0004 00AF     		add	r7, sp, #0
 451              	.LCFI37:
 452              		.cfi_def_cfa_register 7
 453 0006 7860     		str	r0, [r7, #4]
 454 0008 0B46     		mov	r3, r1
 455 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 456 000c 1346     		mov	r3, r2
 457 000e 7B70     		strb	r3, [r7, #1]
 155:Lib/src/gpio.c ****     /* Check the parameters */
 156:Lib/src/gpio.c ****     assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 157:Lib/src/gpio.c ****     assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 158:Lib/src/gpio.c **** 
 159:Lib/src/gpio.c ****     if (Status != Bit_RESET)
 458              		.loc 1 159 8
 459 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 460 0012 002B     		cmp	r3, #0
 461 0014 03D0     		beq	.L20
 160:Lib/src/gpio.c ****     {
 161:Lib/src/gpio.c ****         GPIOx->BSRR = GPIO_Pin;
 462              		.loc 1 161 21
 463 0016 7A88     		ldrh	r2, [r7, #2]
 464 0018 7B68     		ldr	r3, [r7, #4]
 465 001a 1A61     		str	r2, [r3, #16]
 162:Lib/src/gpio.c ****     }
 163:Lib/src/gpio.c ****     else
 164:Lib/src/gpio.c ****     {
 165:Lib/src/gpio.c ****         GPIOx->BRR = GPIO_Pin;
 166:Lib/src/gpio.c ****     }
 167:Lib/src/gpio.c **** }
 466              		.loc 1 167 1
 467 001c 02E0     		b	.L22
 468              	.L20:
 165:Lib/src/gpio.c ****     }
 469              		.loc 1 165 20
 470 001e 7A88     		ldrh	r2, [r7, #2]
 471 0020 7B68     		ldr	r3, [r7, #4]
 472 0022 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczxAq55.s 			page 12


 473              	.L22:
 474              		.loc 1 167 1
 475 0024 00BF     		nop
 476 0026 0C37     		adds	r7, r7, #12
 477              	.LCFI38:
 478              		.cfi_def_cfa_offset 4
 479 0028 BD46     		mov	sp, r7
 480              	.LCFI39:
 481              		.cfi_def_cfa_register 13
 482              		@ sp needed
 483 002a 80BC     		pop	{r7}
 484              	.LCFI40:
 485              		.cfi_restore 7
 486              		.cfi_def_cfa_offset 0
 487 002c 7047     		bx	lr
 488              		.cfi_endproc
 489              	.LFE71:
 491              		.text
 492              	.Letext0:
 493              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 494              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 495              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f10x.h"
 496              		.file 5 "Drivers/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczxAq55.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 gpio.c
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:18     .text.GPIO_Config:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:24     .text.GPIO_Config:00000000 GPIO_Config
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:150    .text.GPIO_Config:000000b0 $d
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:161    .text.GPIO_Enable:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:167    .text.GPIO_Enable:00000000 GPIO_Enable
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:209    .text.GPIO_Disable:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:215    .text.GPIO_Disable:00000000 GPIO_Disable
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:257    .text.GPIO_TogglePin:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:263    .text.GPIO_TogglePin:00000000 GPIO_TogglePin
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:322    .text.GPIO_Lock:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:328    .text.GPIO_Lock:00000000 GPIO_Lock
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:366    .text.GPIO_Read:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:372    .text.GPIO_Read:00000000 GPIO_Read
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:430    .text.GPIO_Write_Pin:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cczxAq55.s:436    .text.GPIO_Write_Pin:00000000 GPIO_Write_Pin

UNDEFINED SYMBOLS
RCC_APB2PeriphClockCmd
GPIO_Init
