ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f10x.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SystemCoreClock
  18              		.section	.data.SystemCoreClock,"aw"
  19              		.align	2
  22              	SystemCoreClock:
  23 0000 00A24A04 		.word	72000000
  24              		.global	AHBPrescTable
  25              		.section	.data.AHBPrescTable,"aw"
  26              		.align	2
  29              	AHBPrescTable:
  30 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
  30      00000000 
  30      01020304 
  30      06
  31 000d 070809   		.ascii	"\007\010\011"
  32              		.section	.text.SystemInit,"ax",%progbits
  33              		.align	1
  34              		.global	SystemInit
  35              		.syntax unified
  36              		.thumb
  37              		.thumb_func
  39              	SystemInit:
  40              	.LFB65:
  41              		.file 1 "User/system_stm32f10x.c"
   1:User/system_stm32f10x.c **** /**
   2:User/system_stm32f10x.c ****   ******************************************************************************
   3:User/system_stm32f10x.c ****   * @file    system_stm32f10x.c
   4:User/system_stm32f10x.c ****   * @author  MCD Application Team
   5:User/system_stm32f10x.c ****   * @version V3.5.0
   6:User/system_stm32f10x.c ****   * @date    08-April-2011
   7:User/system_stm32f10x.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:User/system_stm32f10x.c ****   * 
   9:User/system_stm32f10x.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:User/system_stm32f10x.c ****   *     user application:
  11:User/system_stm32f10x.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:User/system_stm32f10x.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:User/system_stm32f10x.c ****   *                      This function is called at startup just after reset and 
  14:User/system_stm32f10x.c ****   *                      before branch to main program. This call is made inside
  15:User/system_stm32f10x.c ****   *                      the "startup_stm32f10x_xx.s" file.
  16:User/system_stm32f10x.c ****   *
  17:User/system_stm32f10x.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:User/system_stm32f10x.c ****   *                                  by the user application to setup the SysTick 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 2


  19:User/system_stm32f10x.c ****   *                                  timer or configure other parameters.
  20:User/system_stm32f10x.c ****   *                                     
  21:User/system_stm32f10x.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:User/system_stm32f10x.c ****   *                                 be called whenever the core clock is changed
  23:User/system_stm32f10x.c ****   *                                 during program execution.
  24:User/system_stm32f10x.c ****   *
  25:User/system_stm32f10x.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:User/system_stm32f10x.c ****   *    Then SystemInit() function is called, in "startup_stm32f10x_xx.s" file, to
  27:User/system_stm32f10x.c ****   *    configure the system clock before to branch to main program.
  28:User/system_stm32f10x.c ****   *
  29:User/system_stm32f10x.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  30:User/system_stm32f10x.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  31:User/system_stm32f10x.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  32:User/system_stm32f10x.c ****   *
  33:User/system_stm32f10x.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depedning on
  34:User/system_stm32f10x.c ****   *    the product used), refer to "HSE_VALUE" define in "stm32f10x.h" file. 
  35:User/system_stm32f10x.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  36:User/system_stm32f10x.c ****   *    are using different crystal you have to adapt the HSE value to your own
  37:User/system_stm32f10x.c ****   *    configuration.
  38:User/system_stm32f10x.c ****   *        
  39:User/system_stm32f10x.c ****   ******************************************************************************
  40:User/system_stm32f10x.c ****   * @attention
  41:User/system_stm32f10x.c ****   *
  42:User/system_stm32f10x.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  43:User/system_stm32f10x.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  44:User/system_stm32f10x.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  45:User/system_stm32f10x.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  46:User/system_stm32f10x.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  47:User/system_stm32f10x.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  48:User/system_stm32f10x.c ****   *
  49:User/system_stm32f10x.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  50:User/system_stm32f10x.c ****   ******************************************************************************
  51:User/system_stm32f10x.c ****   */
  52:User/system_stm32f10x.c **** 
  53:User/system_stm32f10x.c **** /** @addtogroup CMSIS
  54:User/system_stm32f10x.c ****   * @{
  55:User/system_stm32f10x.c ****   */
  56:User/system_stm32f10x.c **** 
  57:User/system_stm32f10x.c **** /** @addtogroup stm32f10x_system
  58:User/system_stm32f10x.c ****   * @{
  59:User/system_stm32f10x.c ****   */  
  60:User/system_stm32f10x.c ****   
  61:User/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Includes
  62:User/system_stm32f10x.c ****   * @{
  63:User/system_stm32f10x.c ****   */
  64:User/system_stm32f10x.c **** 
  65:User/system_stm32f10x.c **** #include "stm32f10x.h"
  66:User/system_stm32f10x.c **** 
  67:User/system_stm32f10x.c **** /**
  68:User/system_stm32f10x.c ****   * @}
  69:User/system_stm32f10x.c ****   */
  70:User/system_stm32f10x.c **** 
  71:User/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_TypesDefinitions
  72:User/system_stm32f10x.c ****   * @{
  73:User/system_stm32f10x.c ****   */
  74:User/system_stm32f10x.c **** 
  75:User/system_stm32f10x.c **** /**
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 3


  76:User/system_stm32f10x.c ****   * @}
  77:User/system_stm32f10x.c ****   */
  78:User/system_stm32f10x.c **** 
  79:User/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Defines
  80:User/system_stm32f10x.c ****   * @{
  81:User/system_stm32f10x.c ****   */
  82:User/system_stm32f10x.c **** 
  83:User/system_stm32f10x.c **** /*!< Uncomment the line corresponding to the desired System clock (SYSCLK)
  84:User/system_stm32f10x.c ****    frequency (after reset the HSI is used as SYSCLK source)
  85:User/system_stm32f10x.c ****    
  86:User/system_stm32f10x.c ****    IMPORTANT NOTE:
  87:User/system_stm32f10x.c ****    ============== 
  88:User/system_stm32f10x.c ****    1. After each device reset the HSI is used as System clock source.
  89:User/system_stm32f10x.c **** 
  90:User/system_stm32f10x.c ****    2. Please make sure that the selected System clock doesn't exceed your device's
  91:User/system_stm32f10x.c ****       maximum frequency.
  92:User/system_stm32f10x.c ****       
  93:User/system_stm32f10x.c ****    3. If none of the define below is enabled, the HSI is used as System clock
  94:User/system_stm32f10x.c ****     source.
  95:User/system_stm32f10x.c **** 
  96:User/system_stm32f10x.c ****    4. The System clock configuration functions provided within this file assume that:
  97:User/system_stm32f10x.c ****         - For Low, Medium and High density Value line devices an external 8MHz 
  98:User/system_stm32f10x.c ****           crystal is used to drive the System clock.
  99:User/system_stm32f10x.c ****         - For Low, Medium and High density devices an external 8MHz crystal is
 100:User/system_stm32f10x.c ****           used to drive the System clock.
 101:User/system_stm32f10x.c ****         - For Connectivity line devices an external 25MHz crystal is used to drive
 102:User/system_stm32f10x.c ****           the System clock.
 103:User/system_stm32f10x.c ****      If you are using different crystal you have to adapt those functions accordingly.
 104:User/system_stm32f10x.c ****     */
 105:User/system_stm32f10x.c ****     
 106:User/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || (defined STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 107:User/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 108:User/system_stm32f10x.c ****  #define SYSCLK_FREQ_24MHz  24000000
 109:User/system_stm32f10x.c **** #else
 110:User/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 111:User/system_stm32f10x.c **** /* #define SYSCLK_FREQ_24MHz  24000000 */ 
 112:User/system_stm32f10x.c **** /* #define SYSCLK_FREQ_36MHz  36000000 */
 113:User/system_stm32f10x.c **** /* #define SYSCLK_FREQ_48MHz  48000000 */
 114:User/system_stm32f10x.c **** /* #define SYSCLK_FREQ_56MHz  56000000 */
 115:User/system_stm32f10x.c **** #define SYSCLK_FREQ_72MHz  72000000
 116:User/system_stm32f10x.c **** #endif
 117:User/system_stm32f10x.c **** 
 118:User/system_stm32f10x.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 119:User/system_stm32f10x.c ****      on STM3210E-EVAL board (STM32 High density and XL-density devices) or on 
 120:User/system_stm32f10x.c ****      STM32100E-EVAL board (STM32 High-density value line devices) as data memory */ 
 121:User/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 122:User/system_stm32f10x.c **** /* #define DATA_IN_ExtSRAM */
 123:User/system_stm32f10x.c **** #endif
 124:User/system_stm32f10x.c **** 
 125:User/system_stm32f10x.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 126:User/system_stm32f10x.c ****      Internal SRAM. */ 
 127:User/system_stm32f10x.c **** /* #define VECT_TAB_SRAM */
 128:User/system_stm32f10x.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 129:User/system_stm32f10x.c ****                                   This value must be a multiple of 0x200. */
 130:User/system_stm32f10x.c **** 
 131:User/system_stm32f10x.c **** 
 132:User/system_stm32f10x.c **** /**
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 4


 133:User/system_stm32f10x.c ****   * @}
 134:User/system_stm32f10x.c ****   */
 135:User/system_stm32f10x.c **** 
 136:User/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Macros
 137:User/system_stm32f10x.c ****   * @{
 138:User/system_stm32f10x.c ****   */
 139:User/system_stm32f10x.c **** 
 140:User/system_stm32f10x.c **** /**
 141:User/system_stm32f10x.c ****   * @}
 142:User/system_stm32f10x.c ****   */
 143:User/system_stm32f10x.c **** 
 144:User/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Variables
 145:User/system_stm32f10x.c ****   * @{
 146:User/system_stm32f10x.c ****   */
 147:User/system_stm32f10x.c **** 
 148:User/system_stm32f10x.c **** /*******************************************************************************
 149:User/system_stm32f10x.c **** *  Clock Definitions
 150:User/system_stm32f10x.c **** *******************************************************************************/
 151:User/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 152:User/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_HSE;        /*!< System Clock Frequency (Core Cloc
 153:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 154:User/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_24MHz;        /*!< System Clock Frequency (Core Cl
 155:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 156:User/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_36MHz;        /*!< System Clock Frequency (Core Cl
 157:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 158:User/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_48MHz;        /*!< System Clock Frequency (Core Cl
 159:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 160:User/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_56MHz;        /*!< System Clock Frequency (Core Cl
 161:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 162:User/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_72MHz;        /*!< System Clock Frequency (Core Cl
 163:User/system_stm32f10x.c **** #else /*!< HSI Selected as System Clock source */
 164:User/system_stm32f10x.c ****   uint32_t SystemCoreClock         = HSI_VALUE;        /*!< System Clock Frequency (Core Clock) */
 165:User/system_stm32f10x.c **** #endif
 166:User/system_stm32f10x.c **** 
 167:User/system_stm32f10x.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 168:User/system_stm32f10x.c **** /**
 169:User/system_stm32f10x.c ****   * @}
 170:User/system_stm32f10x.c ****   */
 171:User/system_stm32f10x.c **** 
 172:User/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_FunctionPrototypes
 173:User/system_stm32f10x.c ****   * @{
 174:User/system_stm32f10x.c ****   */
 175:User/system_stm32f10x.c **** 
 176:User/system_stm32f10x.c **** static void SetSysClock(void);
 177:User/system_stm32f10x.c **** 
 178:User/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 179:User/system_stm32f10x.c ****   static void SetSysClockToHSE(void);
 180:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 181:User/system_stm32f10x.c ****   static void SetSysClockTo24(void);
 182:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 183:User/system_stm32f10x.c ****   static void SetSysClockTo36(void);
 184:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 185:User/system_stm32f10x.c ****   static void SetSysClockTo48(void);
 186:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 187:User/system_stm32f10x.c ****   static void SetSysClockTo56(void);  
 188:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 189:User/system_stm32f10x.c ****   static void SetSysClockTo72(void);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 5


 190:User/system_stm32f10x.c **** #endif
 191:User/system_stm32f10x.c **** 
 192:User/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 193:User/system_stm32f10x.c ****   static void SystemInit_ExtMemCtl(void); 
 194:User/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 195:User/system_stm32f10x.c **** 
 196:User/system_stm32f10x.c **** /**
 197:User/system_stm32f10x.c ****   * @}
 198:User/system_stm32f10x.c ****   */
 199:User/system_stm32f10x.c **** 
 200:User/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Functions
 201:User/system_stm32f10x.c ****   * @{
 202:User/system_stm32f10x.c ****   */
 203:User/system_stm32f10x.c **** 
 204:User/system_stm32f10x.c **** /**
 205:User/system_stm32f10x.c ****   * @brief  Setup the microcontroller system
 206:User/system_stm32f10x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 207:User/system_stm32f10x.c ****   *         SystemCoreClock variable.
 208:User/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 209:User/system_stm32f10x.c ****   * @param  None
 210:User/system_stm32f10x.c ****   * @retval None
 211:User/system_stm32f10x.c ****   */
 212:User/system_stm32f10x.c **** void SystemInit (void)
 213:User/system_stm32f10x.c **** {
  42              		.loc 1 213 1
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 8
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
  51 0002 00AF     		add	r7, sp, #0
  52              	.LCFI1:
  53              		.cfi_def_cfa_register 7
 214:User/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 215:User/system_stm32f10x.c ****   /* Set HSION bit */
 216:User/system_stm32f10x.c ****   RCC->CR |= (uint32_t)0x00000001;
  54              		.loc 1 216 11
  55 0004 154B     		ldr	r3, .L2
  56 0006 1B68     		ldr	r3, [r3]
  57 0008 144A     		ldr	r2, .L2
  58 000a 43F00103 		orr	r3, r3, #1
  59 000e 1360     		str	r3, [r2]
 217:User/system_stm32f10x.c **** 
 218:User/system_stm32f10x.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 219:User/system_stm32f10x.c **** #ifndef STM32F10X_CL
 220:User/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  60              		.loc 1 220 13
  61 0010 124B     		ldr	r3, .L2
  62 0012 5A68     		ldr	r2, [r3, #4]
  63 0014 1149     		ldr	r1, .L2
  64 0016 124B     		ldr	r3, .L2+4
  65 0018 1340     		ands	r3, r3, r2
  66 001a 4B60     		str	r3, [r1, #4]
 221:User/system_stm32f10x.c **** #else
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 6


 222:User/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 223:User/system_stm32f10x.c **** #endif /* STM32F10X_CL */   
 224:User/system_stm32f10x.c ****   
 225:User/system_stm32f10x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 226:User/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  67              		.loc 1 226 11
  68 001c 0F4B     		ldr	r3, .L2
  69 001e 1B68     		ldr	r3, [r3]
  70 0020 0E4A     		ldr	r2, .L2
  71 0022 23F08473 		bic	r3, r3, #17301504
  72 0026 23F48033 		bic	r3, r3, #65536
  73 002a 1360     		str	r3, [r2]
 227:User/system_stm32f10x.c **** 
 228:User/system_stm32f10x.c ****   /* Reset HSEBYP bit */
 229:User/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  74              		.loc 1 229 11
  75 002c 0B4B     		ldr	r3, .L2
  76 002e 1B68     		ldr	r3, [r3]
  77 0030 0A4A     		ldr	r2, .L2
  78 0032 23F48023 		bic	r3, r3, #262144
  79 0036 1360     		str	r3, [r2]
 230:User/system_stm32f10x.c **** 
 231:User/system_stm32f10x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 232:User/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
  80              		.loc 1 232 13
  81 0038 084B     		ldr	r3, .L2
  82 003a 5B68     		ldr	r3, [r3, #4]
  83 003c 074A     		ldr	r2, .L2
  84 003e 23F4FE03 		bic	r3, r3, #8323072
  85 0042 5360     		str	r3, [r2, #4]
 233:User/system_stm32f10x.c **** 
 234:User/system_stm32f10x.c **** #ifdef STM32F10X_CL
 235:User/system_stm32f10x.c ****   /* Reset PLL2ON and PLL3ON bits */
 236:User/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 237:User/system_stm32f10x.c **** 
 238:User/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 239:User/system_stm32f10x.c ****   RCC->CIR = 0x00FF0000;
 240:User/system_stm32f10x.c **** 
 241:User/system_stm32f10x.c ****   /* Reset CFGR2 register */
 242:User/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;
 243:User/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 244:User/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 245:User/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 246:User/system_stm32f10x.c **** 
 247:User/system_stm32f10x.c ****   /* Reset CFGR2 register */
 248:User/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;      
 249:User/system_stm32f10x.c **** #else
 250:User/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 251:User/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
  86              		.loc 1 251 6
  87 0044 054B     		ldr	r3, .L2
  88              		.loc 1 251 12
  89 0046 4FF41F02 		mov	r2, #10420224
  90 004a 9A60     		str	r2, [r3, #8]
 252:User/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 253:User/system_stm32f10x.c ****     
 254:User/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 7


 255:User/system_stm32f10x.c ****   #ifdef DATA_IN_ExtSRAM
 256:User/system_stm32f10x.c ****     SystemInit_ExtMemCtl(); 
 257:User/system_stm32f10x.c ****   #endif /* DATA_IN_ExtSRAM */
 258:User/system_stm32f10x.c **** #endif 
 259:User/system_stm32f10x.c **** 
 260:User/system_stm32f10x.c ****   /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
 261:User/system_stm32f10x.c ****   /* Configure the Flash Latency cycles and enable prefetch buffer */
 262:User/system_stm32f10x.c ****   SetSysClock();
  91              		.loc 1 262 3
  92 004c FFF7FEFF 		bl	SetSysClock
 263:User/system_stm32f10x.c **** 
 264:User/system_stm32f10x.c **** #ifdef VECT_TAB_SRAM
 265:User/system_stm32f10x.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 266:User/system_stm32f10x.c **** #else
 267:User/system_stm32f10x.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
  93              		.loc 1 267 6
  94 0050 044B     		ldr	r3, .L2+8
  95              		.loc 1 267 13
  96 0052 4FF00062 		mov	r2, #134217728
  97 0056 9A60     		str	r2, [r3, #8]
 268:User/system_stm32f10x.c **** #endif 
 269:User/system_stm32f10x.c **** }
  98              		.loc 1 269 1
  99 0058 00BF     		nop
 100 005a 80BD     		pop	{r7, pc}
 101              	.L3:
 102              		.align	2
 103              	.L2:
 104 005c 00100240 		.word	1073876992
 105 0060 0000FFF8 		.word	-117506048
 106 0064 00ED00E0 		.word	-536810240
 107              		.cfi_endproc
 108              	.LFE65:
 110              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 111              		.align	1
 112              		.global	SystemCoreClockUpdate
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	SystemCoreClockUpdate:
 118              	.LFB66:
 270:User/system_stm32f10x.c **** 
 271:User/system_stm32f10x.c **** /**
 272:User/system_stm32f10x.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 273:User/system_stm32f10x.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 274:User/system_stm32f10x.c ****   *         be used by the user application to setup the SysTick timer or configure
 275:User/system_stm32f10x.c ****   *         other parameters.
 276:User/system_stm32f10x.c ****   *           
 277:User/system_stm32f10x.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 278:User/system_stm32f10x.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 279:User/system_stm32f10x.c ****   *         based on this variable will be incorrect.         
 280:User/system_stm32f10x.c ****   *     
 281:User/system_stm32f10x.c ****   * @note   - The system frequency computed by this function is not the real 
 282:User/system_stm32f10x.c ****   *           frequency in the chip. It is calculated based on the predefined 
 283:User/system_stm32f10x.c ****   *           constant and the selected clock source:
 284:User/system_stm32f10x.c ****   *             
 285:User/system_stm32f10x.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 8


 286:User/system_stm32f10x.c ****   *                                              
 287:User/system_stm32f10x.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 288:User/system_stm32f10x.c ****   *                          
 289:User/system_stm32f10x.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 290:User/system_stm32f10x.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 291:User/system_stm32f10x.c ****   *         
 292:User/system_stm32f10x.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 293:User/system_stm32f10x.c ****   *             8 MHz) but the real value may vary depending on the variations
 294:User/system_stm32f10x.c ****   *             in voltage and temperature.   
 295:User/system_stm32f10x.c ****   *    
 296:User/system_stm32f10x.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 297:User/system_stm32f10x.c ****   *              8 MHz or 25 MHz, depedning on the product used), user has to ensure
 298:User/system_stm32f10x.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 299:User/system_stm32f10x.c ****   *              Otherwise, this function may have wrong result.
 300:User/system_stm32f10x.c ****   *                
 301:User/system_stm32f10x.c ****   *         - The result of this function could be not correct when using fractional
 302:User/system_stm32f10x.c ****   *           value for HSE crystal.
 303:User/system_stm32f10x.c ****   * @param  None
 304:User/system_stm32f10x.c ****   * @retval None
 305:User/system_stm32f10x.c ****   */
 306:User/system_stm32f10x.c **** void SystemCoreClockUpdate (void)
 307:User/system_stm32f10x.c **** {
 119              		.loc 1 307 1
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 16
 122              		@ frame_needed = 1, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124 0000 80B4     		push	{r7}
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 7, -4
 128 0002 85B0     		sub	sp, sp, #20
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 24
 131 0004 00AF     		add	r7, sp, #0
 132              	.LCFI4:
 133              		.cfi_def_cfa_register 7
 308:User/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 134              		.loc 1 308 12
 135 0006 0023     		movs	r3, #0
 136 0008 FB60     		str	r3, [r7, #12]
 137              		.loc 1 308 21
 138 000a 0023     		movs	r3, #0
 139 000c BB60     		str	r3, [r7, #8]
 140              		.loc 1 308 34
 141 000e 0023     		movs	r3, #0
 142 0010 7B60     		str	r3, [r7, #4]
 309:User/system_stm32f10x.c **** 
 310:User/system_stm32f10x.c **** #ifdef  STM32F10X_CL
 311:User/system_stm32f10x.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 312:User/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 313:User/system_stm32f10x.c **** 
 314:User/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 315:User/system_stm32f10x.c ****   uint32_t prediv1factor = 0;
 316:User/system_stm32f10x.c **** #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL or STM32F10X_HD_VL */
 317:User/system_stm32f10x.c ****     
 318:User/system_stm32f10x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 9


 319:User/system_stm32f10x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 143              		.loc 1 319 12
 144 0012 2F4B     		ldr	r3, .L13
 145 0014 5B68     		ldr	r3, [r3, #4]
 146              		.loc 1 319 7
 147 0016 03F00C03 		and	r3, r3, #12
 148 001a FB60     		str	r3, [r7, #12]
 320:User/system_stm32f10x.c ****   
 321:User/system_stm32f10x.c ****   switch (tmp)
 149              		.loc 1 321 3
 150 001c FB68     		ldr	r3, [r7, #12]
 151 001e 082B     		cmp	r3, #8
 152 0020 11D0     		beq	.L5
 153 0022 FB68     		ldr	r3, [r7, #12]
 154 0024 082B     		cmp	r3, #8
 155 0026 3AD8     		bhi	.L6
 156 0028 FB68     		ldr	r3, [r7, #12]
 157 002a 002B     		cmp	r3, #0
 158 002c 03D0     		beq	.L7
 159 002e FB68     		ldr	r3, [r7, #12]
 160 0030 042B     		cmp	r3, #4
 161 0032 04D0     		beq	.L8
 162 0034 33E0     		b	.L6
 163              	.L7:
 322:User/system_stm32f10x.c ****   {
 323:User/system_stm32f10x.c ****     case 0x00:  /* HSI used as system clock */
 324:User/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 164              		.loc 1 324 23
 165 0036 274B     		ldr	r3, .L13+4
 166 0038 274A     		ldr	r2, .L13+8
 167 003a 1A60     		str	r2, [r3]
 325:User/system_stm32f10x.c ****       break;
 168              		.loc 1 325 7
 169 003c 33E0     		b	.L9
 170              	.L8:
 326:User/system_stm32f10x.c ****     case 0x04:  /* HSE used as system clock */
 327:User/system_stm32f10x.c ****       SystemCoreClock = HSE_VALUE;
 171              		.loc 1 327 23
 172 003e 254B     		ldr	r3, .L13+4
 173 0040 254A     		ldr	r2, .L13+8
 174 0042 1A60     		str	r2, [r3]
 328:User/system_stm32f10x.c ****       break;
 175              		.loc 1 328 7
 176 0044 2FE0     		b	.L9
 177              	.L5:
 329:User/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 330:User/system_stm32f10x.c **** 
 331:User/system_stm32f10x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 332:User/system_stm32f10x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 178              		.loc 1 332 20
 179 0046 224B     		ldr	r3, .L13
 180 0048 5B68     		ldr	r3, [r3, #4]
 181              		.loc 1 332 15
 182 004a 03F47013 		and	r3, r3, #3932160
 183 004e BB60     		str	r3, [r7, #8]
 333:User/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 184              		.loc 1 333 22
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 10


 185 0050 1F4B     		ldr	r3, .L13
 186 0052 5B68     		ldr	r3, [r3, #4]
 187              		.loc 1 333 17
 188 0054 03F48033 		and	r3, r3, #65536
 189 0058 7B60     		str	r3, [r7, #4]
 334:User/system_stm32f10x.c ****       
 335:User/system_stm32f10x.c **** #ifndef STM32F10X_CL      
 336:User/system_stm32f10x.c ****       pllmull = ( pllmull >> 18) + 2;
 190              		.loc 1 336 27
 191 005a BB68     		ldr	r3, [r7, #8]
 192 005c 9B0C     		lsrs	r3, r3, #18
 193              		.loc 1 336 15
 194 005e 0233     		adds	r3, r3, #2
 195 0060 BB60     		str	r3, [r7, #8]
 337:User/system_stm32f10x.c ****       
 338:User/system_stm32f10x.c ****       if (pllsource == 0x00)
 196              		.loc 1 338 10
 197 0062 7B68     		ldr	r3, [r7, #4]
 198 0064 002B     		cmp	r3, #0
 199 0066 06D1     		bne	.L10
 339:User/system_stm32f10x.c ****       {
 340:User/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 341:User/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 200              		.loc 1 341 44
 201 0068 BB68     		ldr	r3, [r7, #8]
 202 006a 1C4A     		ldr	r2, .L13+12
 203 006c 02FB03F3 		mul	r3, r2, r3
 204              		.loc 1 341 25
 205 0070 184A     		ldr	r2, .L13+4
 206 0072 1360     		str	r3, [r2]
 342:User/system_stm32f10x.c ****       }
 343:User/system_stm32f10x.c ****       else
 344:User/system_stm32f10x.c ****       {
 345:User/system_stm32f10x.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 346:User/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 347:User/system_stm32f10x.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 348:User/system_stm32f10x.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 349:User/system_stm32f10x.c ****  #else
 350:User/system_stm32f10x.c ****         /* HSE selected as PLL clock entry */
 351:User/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 352:User/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 353:User/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
 354:User/system_stm32f10x.c ****         }
 355:User/system_stm32f10x.c ****         else
 356:User/system_stm32f10x.c ****         {
 357:User/system_stm32f10x.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 358:User/system_stm32f10x.c ****         }
 359:User/system_stm32f10x.c ****  #endif
 360:User/system_stm32f10x.c ****       }
 361:User/system_stm32f10x.c **** #else
 362:User/system_stm32f10x.c ****       pllmull = pllmull >> 18;
 363:User/system_stm32f10x.c ****       
 364:User/system_stm32f10x.c ****       if (pllmull != 0x0D)
 365:User/system_stm32f10x.c ****       {
 366:User/system_stm32f10x.c ****          pllmull += 2;
 367:User/system_stm32f10x.c ****       }
 368:User/system_stm32f10x.c ****       else
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 11


 369:User/system_stm32f10x.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 370:User/system_stm32f10x.c ****         pllmull = 13 / 2; 
 371:User/system_stm32f10x.c ****       }
 372:User/system_stm32f10x.c ****             
 373:User/system_stm32f10x.c ****       if (pllsource == 0x00)
 374:User/system_stm32f10x.c ****       {
 375:User/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 376:User/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 377:User/system_stm32f10x.c ****       }
 378:User/system_stm32f10x.c ****       else
 379:User/system_stm32f10x.c ****       {/* PREDIV1 selected as PLL clock entry */
 380:User/system_stm32f10x.c ****         
 381:User/system_stm32f10x.c ****         /* Get PREDIV1 clock source and division factor */
 382:User/system_stm32f10x.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 383:User/system_stm32f10x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 384:User/system_stm32f10x.c ****         
 385:User/system_stm32f10x.c ****         if (prediv1source == 0)
 386:User/system_stm32f10x.c ****         { 
 387:User/system_stm32f10x.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 388:User/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 389:User/system_stm32f10x.c ****         }
 390:User/system_stm32f10x.c ****         else
 391:User/system_stm32f10x.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 392:User/system_stm32f10x.c ****           
 393:User/system_stm32f10x.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 394:User/system_stm32f10x.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
 395:User/system_stm32f10x.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
 396:User/system_stm32f10x.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 397:User/system_stm32f10x.c ****         }
 398:User/system_stm32f10x.c ****       }
 399:User/system_stm32f10x.c **** #endif /* STM32F10X_CL */ 
 400:User/system_stm32f10x.c ****       break;
 207              		.loc 1 400 7
 208 0074 17E0     		b	.L9
 209              	.L10:
 351:User/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 210              		.loc 1 351 17
 211 0076 164B     		ldr	r3, .L13
 212 0078 5B68     		ldr	r3, [r3, #4]
 351:User/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 213              		.loc 1 351 24
 214 007a 03F40033 		and	r3, r3, #131072
 351:User/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 215              		.loc 1 351 12
 216 007e 002B     		cmp	r3, #0
 217 0080 06D0     		beq	.L12
 353:User/system_stm32f10x.c ****         }
 218              		.loc 1 353 46
 219 0082 BB68     		ldr	r3, [r7, #8]
 220 0084 154A     		ldr	r2, .L13+12
 221 0086 02FB03F3 		mul	r3, r2, r3
 353:User/system_stm32f10x.c ****         }
 222              		.loc 1 353 27
 223 008a 124A     		ldr	r2, .L13+4
 224 008c 1360     		str	r3, [r2]
 225              		.loc 1 400 7
 226 008e 0AE0     		b	.L9
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 12


 227              	.L12:
 357:User/system_stm32f10x.c ****         }
 228              		.loc 1 357 39
 229 0090 BB68     		ldr	r3, [r7, #8]
 230 0092 114A     		ldr	r2, .L13+8
 231 0094 02FB03F3 		mul	r3, r2, r3
 357:User/system_stm32f10x.c ****         }
 232              		.loc 1 357 27
 233 0098 0E4A     		ldr	r2, .L13+4
 234 009a 1360     		str	r3, [r2]
 235              		.loc 1 400 7
 236 009c 03E0     		b	.L9
 237              	.L6:
 401:User/system_stm32f10x.c **** 
 402:User/system_stm32f10x.c ****     default:
 403:User/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 238              		.loc 1 403 23
 239 009e 0D4B     		ldr	r3, .L13+4
 240 00a0 0D4A     		ldr	r2, .L13+8
 241 00a2 1A60     		str	r2, [r3]
 404:User/system_stm32f10x.c ****       break;
 242              		.loc 1 404 7
 243 00a4 00BF     		nop
 244              	.L9:
 405:User/system_stm32f10x.c ****   }
 406:User/system_stm32f10x.c ****   
 407:User/system_stm32f10x.c ****   /* Compute HCLK clock frequency ----------------*/
 408:User/system_stm32f10x.c ****   /* Get HCLK prescaler */
 409:User/system_stm32f10x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 245              		.loc 1 409 28
 246 00a6 0A4B     		ldr	r3, .L13
 247 00a8 5B68     		ldr	r3, [r3, #4]
 248              		.loc 1 409 52
 249 00aa 1B09     		lsrs	r3, r3, #4
 250 00ac 03F00F03 		and	r3, r3, #15
 251              		.loc 1 409 22
 252 00b0 0B4A     		ldr	r2, .L13+16
 253 00b2 D35C     		ldrb	r3, [r2, r3]
 254 00b4 DBB2     		uxtb	r3, r3
 255              		.loc 1 409 7
 256 00b6 FB60     		str	r3, [r7, #12]
 410:User/system_stm32f10x.c ****   /* HCLK clock frequency */
 411:User/system_stm32f10x.c ****   SystemCoreClock >>= tmp;  
 257              		.loc 1 411 19
 258 00b8 064B     		ldr	r3, .L13+4
 259 00ba 1A68     		ldr	r2, [r3]
 260 00bc FB68     		ldr	r3, [r7, #12]
 261 00be 22FA03F3 		lsr	r3, r2, r3
 262 00c2 044A     		ldr	r2, .L13+4
 263 00c4 1360     		str	r3, [r2]
 412:User/system_stm32f10x.c **** }
 264              		.loc 1 412 1
 265 00c6 00BF     		nop
 266 00c8 1437     		adds	r7, r7, #20
 267              	.LCFI5:
 268              		.cfi_def_cfa_offset 4
 269 00ca BD46     		mov	sp, r7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 13


 270              	.LCFI6:
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 00cc 80BC     		pop	{r7}
 274              	.LCFI7:
 275              		.cfi_restore 7
 276              		.cfi_def_cfa_offset 0
 277 00ce 7047     		bx	lr
 278              	.L14:
 279              		.align	2
 280              	.L13:
 281 00d0 00100240 		.word	1073876992
 282 00d4 00000000 		.word	SystemCoreClock
 283 00d8 00127A00 		.word	8000000
 284 00dc 00093D00 		.word	4000000
 285 00e0 00000000 		.word	AHBPrescTable
 286              		.cfi_endproc
 287              	.LFE66:
 289              		.section	.text.SetSysClock,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	SetSysClock:
 296              	.LFB67:
 413:User/system_stm32f10x.c **** 
 414:User/system_stm32f10x.c **** /**
 415:User/system_stm32f10x.c ****   * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
 416:User/system_stm32f10x.c ****   * @param  None
 417:User/system_stm32f10x.c ****   * @retval None
 418:User/system_stm32f10x.c ****   */
 419:User/system_stm32f10x.c **** static void SetSysClock(void)
 420:User/system_stm32f10x.c **** {
 297              		.loc 1 420 1
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301 0000 80B5     		push	{r7, lr}
 302              	.LCFI8:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 00AF     		add	r7, sp, #0
 307              	.LCFI9:
 308              		.cfi_def_cfa_register 7
 421:User/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 422:User/system_stm32f10x.c ****   SetSysClockToHSE();
 423:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 424:User/system_stm32f10x.c ****   SetSysClockTo24();
 425:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 426:User/system_stm32f10x.c ****   SetSysClockTo36();
 427:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 428:User/system_stm32f10x.c ****   SetSysClockTo48();
 429:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 430:User/system_stm32f10x.c ****   SetSysClockTo56();  
 431:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 432:User/system_stm32f10x.c ****   SetSysClockTo72();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 14


 309              		.loc 1 432 3
 310 0004 FFF7FEFF 		bl	SetSysClockTo72
 433:User/system_stm32f10x.c **** #endif
 434:User/system_stm32f10x.c ****  
 435:User/system_stm32f10x.c ****  /* If none of the define above is enabled, the HSI is used as System clock
 436:User/system_stm32f10x.c ****     source (default after reset) */ 
 437:User/system_stm32f10x.c **** }
 311              		.loc 1 437 1
 312 0008 00BF     		nop
 313 000a 80BD     		pop	{r7, pc}
 314              		.cfi_endproc
 315              	.LFE67:
 317              		.section	.text.SetSysClockTo72,"ax",%progbits
 318              		.align	1
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 323              	SetSysClockTo72:
 324              	.LFB68:
 438:User/system_stm32f10x.c **** 
 439:User/system_stm32f10x.c **** /**
 440:User/system_stm32f10x.c ****   * @brief  Setup the external memory controller. Called in startup_stm32f10x.s 
 441:User/system_stm32f10x.c ****   *          before jump to __main
 442:User/system_stm32f10x.c ****   * @param  None
 443:User/system_stm32f10x.c ****   * @retval None
 444:User/system_stm32f10x.c ****   */ 
 445:User/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 446:User/system_stm32f10x.c **** /**
 447:User/system_stm32f10x.c ****   * @brief  Setup the external memory controller. 
 448:User/system_stm32f10x.c ****   *         Called in startup_stm32f10x_xx.s/.c before jump to main.
 449:User/system_stm32f10x.c ****   * 	      This function configures the external SRAM mounted on STM3210E-EVAL
 450:User/system_stm32f10x.c ****   *         board (STM32 High density devices). This SRAM will be used as program
 451:User/system_stm32f10x.c ****   *         data memory (including heap and stack).
 452:User/system_stm32f10x.c ****   * @param  None
 453:User/system_stm32f10x.c ****   * @retval None
 454:User/system_stm32f10x.c ****   */ 
 455:User/system_stm32f10x.c **** void SystemInit_ExtMemCtl(void) 
 456:User/system_stm32f10x.c **** {
 457:User/system_stm32f10x.c **** /*!< FSMC Bank1 NOR/SRAM3 is used for the STM3210E-EVAL, if another Bank is 
 458:User/system_stm32f10x.c ****   required, then adjust the Register Addresses */
 459:User/system_stm32f10x.c **** 
 460:User/system_stm32f10x.c ****   /* Enable FSMC clock */
 461:User/system_stm32f10x.c ****   RCC->AHBENR = 0x00000114;
 462:User/system_stm32f10x.c ****   
 463:User/system_stm32f10x.c ****   /* Enable GPIOD, GPIOE, GPIOF and GPIOG clocks */  
 464:User/system_stm32f10x.c ****   RCC->APB2ENR = 0x000001E0;
 465:User/system_stm32f10x.c ****   
 466:User/system_stm32f10x.c **** /* ---------------  SRAM Data lines, NOE and NWE configuration ---------------*/
 467:User/system_stm32f10x.c **** /*----------------  SRAM Address lines configuration -------------------------*/
 468:User/system_stm32f10x.c **** /*----------------  NOE and NWE configuration --------------------------------*/  
 469:User/system_stm32f10x.c **** /*----------------  NE3 configuration ----------------------------------------*/
 470:User/system_stm32f10x.c **** /*----------------  NBL0, NBL1 configuration ---------------------------------*/
 471:User/system_stm32f10x.c ****   
 472:User/system_stm32f10x.c ****   GPIOD->CRL = 0x44BB44BB;  
 473:User/system_stm32f10x.c ****   GPIOD->CRH = 0xBBBBBBBB;
 474:User/system_stm32f10x.c **** 
 475:User/system_stm32f10x.c ****   GPIOE->CRL = 0xB44444BB;  
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 15


 476:User/system_stm32f10x.c ****   GPIOE->CRH = 0xBBBBBBBB;
 477:User/system_stm32f10x.c **** 
 478:User/system_stm32f10x.c ****   GPIOF->CRL = 0x44BBBBBB;  
 479:User/system_stm32f10x.c ****   GPIOF->CRH = 0xBBBB4444;
 480:User/system_stm32f10x.c **** 
 481:User/system_stm32f10x.c ****   GPIOG->CRL = 0x44BBBBBB;  
 482:User/system_stm32f10x.c ****   GPIOG->CRH = 0x44444B44;
 483:User/system_stm32f10x.c ****    
 484:User/system_stm32f10x.c **** /*----------------  FSMC Configuration ---------------------------------------*/  
 485:User/system_stm32f10x.c **** /*----------------  Enable FSMC Bank1_SRAM Bank ------------------------------*/
 486:User/system_stm32f10x.c ****   
 487:User/system_stm32f10x.c ****   FSMC_Bank1->BTCR[4] = 0x00001011;
 488:User/system_stm32f10x.c ****   FSMC_Bank1->BTCR[5] = 0x00000200;
 489:User/system_stm32f10x.c **** }
 490:User/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 491:User/system_stm32f10x.c **** 
 492:User/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 493:User/system_stm32f10x.c **** /**
 494:User/system_stm32f10x.c ****   * @brief  Selects HSE as System clock source and configure HCLK, PCLK2
 495:User/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 496:User/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 497:User/system_stm32f10x.c ****   * @param  None
 498:User/system_stm32f10x.c ****   * @retval None
 499:User/system_stm32f10x.c ****   */
 500:User/system_stm32f10x.c **** static void SetSysClockToHSE(void)
 501:User/system_stm32f10x.c **** {
 502:User/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 503:User/system_stm32f10x.c ****   
 504:User/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 505:User/system_stm32f10x.c ****   /* Enable HSE */    
 506:User/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 507:User/system_stm32f10x.c ****  
 508:User/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 509:User/system_stm32f10x.c ****   do
 510:User/system_stm32f10x.c ****   {
 511:User/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 512:User/system_stm32f10x.c ****     StartUpCounter++;  
 513:User/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 514:User/system_stm32f10x.c **** 
 515:User/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 516:User/system_stm32f10x.c ****   {
 517:User/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 518:User/system_stm32f10x.c ****   }
 519:User/system_stm32f10x.c ****   else
 520:User/system_stm32f10x.c ****   {
 521:User/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 522:User/system_stm32f10x.c ****   }  
 523:User/system_stm32f10x.c **** 
 524:User/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 525:User/system_stm32f10x.c ****   {
 526:User/system_stm32f10x.c **** 
 527:User/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL
 528:User/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 529:User/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 530:User/system_stm32f10x.c **** 
 531:User/system_stm32f10x.c ****     /* Flash 0 wait state */
 532:User/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 16


 533:User/system_stm32f10x.c **** 
 534:User/system_stm32f10x.c **** #ifndef STM32F10X_CL
 535:User/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 536:User/system_stm32f10x.c **** #else
 537:User/system_stm32f10x.c ****     if (HSE_VALUE <= 24000000)
 538:User/system_stm32f10x.c **** 	{
 539:User/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 540:User/system_stm32f10x.c **** 	}
 541:User/system_stm32f10x.c **** 	else
 542:User/system_stm32f10x.c **** 	{
 543:User/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;
 544:User/system_stm32f10x.c **** 	}
 545:User/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 546:User/system_stm32f10x.c **** #endif
 547:User/system_stm32f10x.c ****  
 548:User/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 549:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 550:User/system_stm32f10x.c ****       
 551:User/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 552:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 553:User/system_stm32f10x.c ****     
 554:User/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 555:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 556:User/system_stm32f10x.c ****     
 557:User/system_stm32f10x.c ****     /* Select HSE as system clock source */
 558:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 559:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_HSE;    
 560:User/system_stm32f10x.c **** 
 561:User/system_stm32f10x.c ****     /* Wait till HSE is used as system clock source */
 562:User/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x04)
 563:User/system_stm32f10x.c ****     {
 564:User/system_stm32f10x.c ****     }
 565:User/system_stm32f10x.c ****   }
 566:User/system_stm32f10x.c ****   else
 567:User/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 568:User/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 569:User/system_stm32f10x.c ****   }  
 570:User/system_stm32f10x.c **** }
 571:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 572:User/system_stm32f10x.c **** /**
 573:User/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 24MHz and configure HCLK, PCLK2 
 574:User/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 575:User/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 576:User/system_stm32f10x.c ****   * @param  None
 577:User/system_stm32f10x.c ****   * @retval None
 578:User/system_stm32f10x.c ****   */
 579:User/system_stm32f10x.c **** static void SetSysClockTo24(void)
 580:User/system_stm32f10x.c **** {
 581:User/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 582:User/system_stm32f10x.c ****   
 583:User/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 584:User/system_stm32f10x.c ****   /* Enable HSE */    
 585:User/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 586:User/system_stm32f10x.c ****  
 587:User/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 588:User/system_stm32f10x.c ****   do
 589:User/system_stm32f10x.c ****   {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 17


 590:User/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 591:User/system_stm32f10x.c ****     StartUpCounter++;  
 592:User/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 593:User/system_stm32f10x.c **** 
 594:User/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 595:User/system_stm32f10x.c ****   {
 596:User/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 597:User/system_stm32f10x.c ****   }
 598:User/system_stm32f10x.c ****   else
 599:User/system_stm32f10x.c ****   {
 600:User/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 601:User/system_stm32f10x.c ****   }  
 602:User/system_stm32f10x.c **** 
 603:User/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 604:User/system_stm32f10x.c ****   {
 605:User/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL 
 606:User/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 607:User/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 608:User/system_stm32f10x.c **** 
 609:User/system_stm32f10x.c ****     /* Flash 0 wait state */
 610:User/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 611:User/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;    
 612:User/system_stm32f10x.c **** #endif
 613:User/system_stm32f10x.c ****  
 614:User/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 615:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 616:User/system_stm32f10x.c ****       
 617:User/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 618:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 619:User/system_stm32f10x.c ****     
 620:User/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 621:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 622:User/system_stm32f10x.c ****     
 623:User/system_stm32f10x.c **** #ifdef STM32F10X_CL
 624:User/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 625:User/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 24 MHz */ 
 626:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 627:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 628:User/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 629:User/system_stm32f10x.c **** 
 630:User/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 631:User/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */       
 632:User/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 633:User/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 634:User/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 635:User/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 636:User/system_stm32f10x.c ****   
 637:User/system_stm32f10x.c ****     /* Enable PLL2 */
 638:User/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 639:User/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 640:User/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 641:User/system_stm32f10x.c ****     {
 642:User/system_stm32f10x.c ****     }   
 643:User/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 644:User/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 645:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 646:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1_Div2 | RCC_CFGR_PLL
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 18


 647:User/system_stm32f10x.c **** #else    
 648:User/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 649:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 650:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL6);
 651:User/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 652:User/system_stm32f10x.c **** 
 653:User/system_stm32f10x.c ****     /* Enable PLL */
 654:User/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 655:User/system_stm32f10x.c **** 
 656:User/system_stm32f10x.c ****     /* Wait till PLL is ready */
 657:User/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 658:User/system_stm32f10x.c ****     {
 659:User/system_stm32f10x.c ****     }
 660:User/system_stm32f10x.c **** 
 661:User/system_stm32f10x.c ****     /* Select PLL as system clock source */
 662:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 663:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 664:User/system_stm32f10x.c **** 
 665:User/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 666:User/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 667:User/system_stm32f10x.c ****     {
 668:User/system_stm32f10x.c ****     }
 669:User/system_stm32f10x.c ****   }
 670:User/system_stm32f10x.c ****   else
 671:User/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 672:User/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 673:User/system_stm32f10x.c ****   } 
 674:User/system_stm32f10x.c **** }
 675:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 676:User/system_stm32f10x.c **** /**
 677:User/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 36MHz and configure HCLK, PCLK2 
 678:User/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 679:User/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 680:User/system_stm32f10x.c ****   * @param  None
 681:User/system_stm32f10x.c ****   * @retval None
 682:User/system_stm32f10x.c ****   */
 683:User/system_stm32f10x.c **** static void SetSysClockTo36(void)
 684:User/system_stm32f10x.c **** {
 685:User/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 686:User/system_stm32f10x.c ****   
 687:User/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 688:User/system_stm32f10x.c ****   /* Enable HSE */    
 689:User/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 690:User/system_stm32f10x.c ****  
 691:User/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 692:User/system_stm32f10x.c ****   do
 693:User/system_stm32f10x.c ****   {
 694:User/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 695:User/system_stm32f10x.c ****     StartUpCounter++;  
 696:User/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 697:User/system_stm32f10x.c **** 
 698:User/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 699:User/system_stm32f10x.c ****   {
 700:User/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 701:User/system_stm32f10x.c ****   }
 702:User/system_stm32f10x.c ****   else
 703:User/system_stm32f10x.c ****   {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 19


 704:User/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 705:User/system_stm32f10x.c ****   }  
 706:User/system_stm32f10x.c **** 
 707:User/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 708:User/system_stm32f10x.c ****   {
 709:User/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 710:User/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 711:User/system_stm32f10x.c **** 
 712:User/system_stm32f10x.c ****     /* Flash 1 wait state */
 713:User/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 714:User/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 715:User/system_stm32f10x.c ****  
 716:User/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 717:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 718:User/system_stm32f10x.c ****       
 719:User/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 720:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 721:User/system_stm32f10x.c ****     
 722:User/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 723:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 724:User/system_stm32f10x.c ****     
 725:User/system_stm32f10x.c **** #ifdef STM32F10X_CL
 726:User/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 727:User/system_stm32f10x.c ****     
 728:User/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 36 MHz */ 
 729:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 730:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 731:User/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
 732:User/system_stm32f10x.c **** 
 733:User/system_stm32f10x.c **** 	/*!< PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 734:User/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */
 735:User/system_stm32f10x.c ****         
 736:User/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 737:User/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 738:User/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 739:User/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 740:User/system_stm32f10x.c ****   
 741:User/system_stm32f10x.c ****     /* Enable PLL2 */
 742:User/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 743:User/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 744:User/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 745:User/system_stm32f10x.c ****     {
 746:User/system_stm32f10x.c ****     }
 747:User/system_stm32f10x.c ****     
 748:User/system_stm32f10x.c **** #else    
 749:User/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = (HSE / 2) * 9 = 36 MHz */
 750:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 751:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL9);
 752:User/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 753:User/system_stm32f10x.c **** 
 754:User/system_stm32f10x.c ****     /* Enable PLL */
 755:User/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 756:User/system_stm32f10x.c **** 
 757:User/system_stm32f10x.c ****     /* Wait till PLL is ready */
 758:User/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 759:User/system_stm32f10x.c ****     {
 760:User/system_stm32f10x.c ****     }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 20


 761:User/system_stm32f10x.c **** 
 762:User/system_stm32f10x.c ****     /* Select PLL as system clock source */
 763:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 764:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 765:User/system_stm32f10x.c **** 
 766:User/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 767:User/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 768:User/system_stm32f10x.c ****     {
 769:User/system_stm32f10x.c ****     }
 770:User/system_stm32f10x.c ****   }
 771:User/system_stm32f10x.c ****   else
 772:User/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 773:User/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 774:User/system_stm32f10x.c ****   } 
 775:User/system_stm32f10x.c **** }
 776:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 777:User/system_stm32f10x.c **** /**
 778:User/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 48MHz and configure HCLK, PCLK2 
 779:User/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 780:User/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 781:User/system_stm32f10x.c ****   * @param  None
 782:User/system_stm32f10x.c ****   * @retval None
 783:User/system_stm32f10x.c ****   */
 784:User/system_stm32f10x.c **** static void SetSysClockTo48(void)
 785:User/system_stm32f10x.c **** {
 786:User/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 787:User/system_stm32f10x.c ****   
 788:User/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 789:User/system_stm32f10x.c ****   /* Enable HSE */    
 790:User/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 791:User/system_stm32f10x.c ****  
 792:User/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 793:User/system_stm32f10x.c ****   do
 794:User/system_stm32f10x.c ****   {
 795:User/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 796:User/system_stm32f10x.c ****     StartUpCounter++;  
 797:User/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 798:User/system_stm32f10x.c **** 
 799:User/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 800:User/system_stm32f10x.c ****   {
 801:User/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 802:User/system_stm32f10x.c ****   }
 803:User/system_stm32f10x.c ****   else
 804:User/system_stm32f10x.c ****   {
 805:User/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 806:User/system_stm32f10x.c ****   }  
 807:User/system_stm32f10x.c **** 
 808:User/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 809:User/system_stm32f10x.c ****   {
 810:User/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 811:User/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 812:User/system_stm32f10x.c **** 
 813:User/system_stm32f10x.c ****     /* Flash 1 wait state */
 814:User/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 815:User/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 816:User/system_stm32f10x.c ****  
 817:User/system_stm32f10x.c ****     /* HCLK = SYSCLK */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 21


 818:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 819:User/system_stm32f10x.c ****       
 820:User/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 821:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 822:User/system_stm32f10x.c ****     
 823:User/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 824:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 825:User/system_stm32f10x.c ****     
 826:User/system_stm32f10x.c **** #ifdef STM32F10X_CL
 827:User/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 828:User/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 829:User/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 830:User/system_stm32f10x.c ****         
 831:User/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 832:User/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 833:User/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 834:User/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 835:User/system_stm32f10x.c ****   
 836:User/system_stm32f10x.c ****     /* Enable PLL2 */
 837:User/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 838:User/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 839:User/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 840:User/system_stm32f10x.c ****     {
 841:User/system_stm32f10x.c ****     }
 842:User/system_stm32f10x.c ****     
 843:User/system_stm32f10x.c ****    
 844:User/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 48 MHz */ 
 845:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 846:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 847:User/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 848:User/system_stm32f10x.c **** #else    
 849:User/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 6 = 48 MHz */
 850:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 851:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL6);
 852:User/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 853:User/system_stm32f10x.c **** 
 854:User/system_stm32f10x.c ****     /* Enable PLL */
 855:User/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 856:User/system_stm32f10x.c **** 
 857:User/system_stm32f10x.c ****     /* Wait till PLL is ready */
 858:User/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 859:User/system_stm32f10x.c ****     {
 860:User/system_stm32f10x.c ****     }
 861:User/system_stm32f10x.c **** 
 862:User/system_stm32f10x.c ****     /* Select PLL as system clock source */
 863:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 864:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 865:User/system_stm32f10x.c **** 
 866:User/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 867:User/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 868:User/system_stm32f10x.c ****     {
 869:User/system_stm32f10x.c ****     }
 870:User/system_stm32f10x.c ****   }
 871:User/system_stm32f10x.c ****   else
 872:User/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 873:User/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 874:User/system_stm32f10x.c ****   } 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 22


 875:User/system_stm32f10x.c **** }
 876:User/system_stm32f10x.c **** 
 877:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 878:User/system_stm32f10x.c **** /**
 879:User/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 56MHz and configure HCLK, PCLK2 
 880:User/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 881:User/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 882:User/system_stm32f10x.c ****   * @param  None
 883:User/system_stm32f10x.c ****   * @retval None
 884:User/system_stm32f10x.c ****   */
 885:User/system_stm32f10x.c **** static void SetSysClockTo56(void)
 886:User/system_stm32f10x.c **** {
 887:User/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 888:User/system_stm32f10x.c ****   
 889:User/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/   
 890:User/system_stm32f10x.c ****   /* Enable HSE */    
 891:User/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 892:User/system_stm32f10x.c ****  
 893:User/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 894:User/system_stm32f10x.c ****   do
 895:User/system_stm32f10x.c ****   {
 896:User/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 897:User/system_stm32f10x.c ****     StartUpCounter++;  
 898:User/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 899:User/system_stm32f10x.c **** 
 900:User/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 901:User/system_stm32f10x.c ****   {
 902:User/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 903:User/system_stm32f10x.c ****   }
 904:User/system_stm32f10x.c ****   else
 905:User/system_stm32f10x.c ****   {
 906:User/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 907:User/system_stm32f10x.c ****   }  
 908:User/system_stm32f10x.c **** 
 909:User/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 910:User/system_stm32f10x.c ****   {
 911:User/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 912:User/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 913:User/system_stm32f10x.c **** 
 914:User/system_stm32f10x.c ****     /* Flash 2 wait state */
 915:User/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 916:User/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 917:User/system_stm32f10x.c ****  
 918:User/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 919:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 920:User/system_stm32f10x.c ****       
 921:User/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 922:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 923:User/system_stm32f10x.c ****     
 924:User/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 925:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 926:User/system_stm32f10x.c **** 
 927:User/system_stm32f10x.c **** #ifdef STM32F10X_CL
 928:User/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 929:User/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 930:User/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 931:User/system_stm32f10x.c ****         
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 23


 932:User/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 933:User/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 934:User/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 935:User/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 936:User/system_stm32f10x.c ****   
 937:User/system_stm32f10x.c ****     /* Enable PLL2 */
 938:User/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 939:User/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 940:User/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 941:User/system_stm32f10x.c ****     {
 942:User/system_stm32f10x.c ****     }
 943:User/system_stm32f10x.c ****     
 944:User/system_stm32f10x.c ****    
 945:User/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 7 = 56 MHz */ 
 946:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 947:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 948:User/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL7); 
 949:User/system_stm32f10x.c **** #else     
 950:User/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = HSE * 7 = 56 MHz */
 951:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 952:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL7);
 953:User/system_stm32f10x.c **** 
 954:User/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 955:User/system_stm32f10x.c **** 
 956:User/system_stm32f10x.c ****     /* Enable PLL */
 957:User/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 958:User/system_stm32f10x.c **** 
 959:User/system_stm32f10x.c ****     /* Wait till PLL is ready */
 960:User/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 961:User/system_stm32f10x.c ****     {
 962:User/system_stm32f10x.c ****     }
 963:User/system_stm32f10x.c **** 
 964:User/system_stm32f10x.c ****     /* Select PLL as system clock source */
 965:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 966:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 967:User/system_stm32f10x.c **** 
 968:User/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 969:User/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 970:User/system_stm32f10x.c ****     {
 971:User/system_stm32f10x.c ****     }
 972:User/system_stm32f10x.c ****   }
 973:User/system_stm32f10x.c ****   else
 974:User/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 975:User/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 976:User/system_stm32f10x.c ****   } 
 977:User/system_stm32f10x.c **** }
 978:User/system_stm32f10x.c **** 
 979:User/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 980:User/system_stm32f10x.c **** /**
 981:User/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 72MHz and configure HCLK, PCLK2 
 982:User/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 983:User/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 984:User/system_stm32f10x.c ****   * @param  None
 985:User/system_stm32f10x.c ****   * @retval None
 986:User/system_stm32f10x.c ****   */
 987:User/system_stm32f10x.c **** static void SetSysClockTo72(void)
 988:User/system_stm32f10x.c **** {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 24


 325              		.loc 1 988 1
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 8
 328              		@ frame_needed = 1, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 330 0000 80B4     		push	{r7}
 331              	.LCFI10:
 332              		.cfi_def_cfa_offset 4
 333              		.cfi_offset 7, -4
 334 0002 83B0     		sub	sp, sp, #12
 335              	.LCFI11:
 336              		.cfi_def_cfa_offset 16
 337 0004 00AF     		add	r7, sp, #0
 338              	.LCFI12:
 339              		.cfi_def_cfa_register 7
 989:User/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 340              		.loc 1 989 17
 341 0006 0023     		movs	r3, #0
 342 0008 7B60     		str	r3, [r7, #4]
 343              		.loc 1 989 37
 344 000a 0023     		movs	r3, #0
 345 000c 3B60     		str	r3, [r7]
 990:User/system_stm32f10x.c ****   
 991:User/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 992:User/system_stm32f10x.c ****   /* Enable HSE */    
 993:User/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 346              		.loc 1 993 11
 347 000e 3A4B     		ldr	r3, .L25
 348 0010 1B68     		ldr	r3, [r3]
 349 0012 394A     		ldr	r2, .L25
 350 0014 43F48033 		orr	r3, r3, #65536
 351 0018 1360     		str	r3, [r2]
 352              	.L18:
 994:User/system_stm32f10x.c ****  
 995:User/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 996:User/system_stm32f10x.c ****   do
 997:User/system_stm32f10x.c ****   {
 998:User/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 353              		.loc 1 998 20 discriminator 2
 354 001a 374B     		ldr	r3, .L25
 355 001c 1B68     		ldr	r3, [r3]
 356              		.loc 1 998 25 discriminator 2
 357 001e 03F40033 		and	r3, r3, #131072
 358              		.loc 1 998 15 discriminator 2
 359 0022 3B60     		str	r3, [r7]
 999:User/system_stm32f10x.c ****     StartUpCounter++;  
 360              		.loc 1 999 19 discriminator 2
 361 0024 7B68     		ldr	r3, [r7, #4]
 362 0026 0133     		adds	r3, r3, #1
 363 0028 7B60     		str	r3, [r7, #4]
1000:User/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 364              		.loc 1 1000 22 discriminator 2
 365 002a 3B68     		ldr	r3, [r7]
 366              		.loc 1 1000 3 discriminator 2
 367 002c 002B     		cmp	r3, #0
 368 002e 03D1     		bne	.L17
 369              		.loc 1 1000 47 discriminator 1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 25


 370 0030 7B68     		ldr	r3, [r7, #4]
 371              		.loc 1 1000 28 discriminator 1
 372 0032 B3F5A06F 		cmp	r3, #1280
 373 0036 F0D1     		bne	.L18
 374              	.L17:
1001:User/system_stm32f10x.c **** 
1002:User/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 375              		.loc 1 1002 11
 376 0038 2F4B     		ldr	r3, .L25
 377 003a 1B68     		ldr	r3, [r3]
 378              		.loc 1 1002 16
 379 003c 03F40033 		and	r3, r3, #131072
 380              		.loc 1 1002 6
 381 0040 002B     		cmp	r3, #0
 382 0042 02D0     		beq	.L19
1003:User/system_stm32f10x.c ****   {
1004:User/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 383              		.loc 1 1004 15
 384 0044 0123     		movs	r3, #1
 385 0046 3B60     		str	r3, [r7]
 386 0048 01E0     		b	.L20
 387              	.L19:
1005:User/system_stm32f10x.c ****   }
1006:User/system_stm32f10x.c ****   else
1007:User/system_stm32f10x.c ****   {
1008:User/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 388              		.loc 1 1008 15
 389 004a 0023     		movs	r3, #0
 390 004c 3B60     		str	r3, [r7]
 391              	.L20:
1009:User/system_stm32f10x.c ****   }  
1010:User/system_stm32f10x.c **** 
1011:User/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 392              		.loc 1 1011 17
 393 004e 3B68     		ldr	r3, [r7]
 394              		.loc 1 1011 6
 395 0050 012B     		cmp	r3, #1
 396 0052 4BD1     		bne	.L24
1012:User/system_stm32f10x.c ****   {
1013:User/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
1014:User/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 397              		.loc 1 1014 16
 398 0054 294B     		ldr	r3, .L25+4
 399 0056 1B68     		ldr	r3, [r3]
 400 0058 284A     		ldr	r2, .L25+4
 401 005a 43F01003 		orr	r3, r3, #16
 402 005e 1360     		str	r3, [r2]
1015:User/system_stm32f10x.c **** 
1016:User/system_stm32f10x.c ****     /* Flash 2 wait state */
1017:User/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 403              		.loc 1 1017 16
 404 0060 264B     		ldr	r3, .L25+4
 405 0062 1B68     		ldr	r3, [r3]
 406 0064 254A     		ldr	r2, .L25+4
 407 0066 23F00303 		bic	r3, r3, #3
 408 006a 1360     		str	r3, [r2]
1018:User/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 26


 409              		.loc 1 1018 16
 410 006c 234B     		ldr	r3, .L25+4
 411 006e 1B68     		ldr	r3, [r3]
 412 0070 224A     		ldr	r2, .L25+4
 413 0072 43F00203 		orr	r3, r3, #2
 414 0076 1360     		str	r3, [r2]
1019:User/system_stm32f10x.c **** 
1020:User/system_stm32f10x.c ****  
1021:User/system_stm32f10x.c ****     /* HCLK = SYSCLK */
1022:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 415              		.loc 1 1022 15
 416 0078 1F4B     		ldr	r3, .L25
 417 007a 1F4A     		ldr	r2, .L25
 418 007c 5B68     		ldr	r3, [r3, #4]
 419 007e 5360     		str	r3, [r2, #4]
1023:User/system_stm32f10x.c ****       
1024:User/system_stm32f10x.c ****     /* PCLK2 = HCLK */
1025:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 420              		.loc 1 1025 15
 421 0080 1D4B     		ldr	r3, .L25
 422 0082 1D4A     		ldr	r2, .L25
 423 0084 5B68     		ldr	r3, [r3, #4]
 424 0086 5360     		str	r3, [r2, #4]
1026:User/system_stm32f10x.c ****     
1027:User/system_stm32f10x.c ****     /* PCLK1 = HCLK */
1028:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 425              		.loc 1 1028 15
 426 0088 1B4B     		ldr	r3, .L25
 427 008a 5B68     		ldr	r3, [r3, #4]
 428 008c 1A4A     		ldr	r2, .L25
 429 008e 43F48063 		orr	r3, r3, #1024
 430 0092 5360     		str	r3, [r2, #4]
1029:User/system_stm32f10x.c **** 
1030:User/system_stm32f10x.c **** #ifdef STM32F10X_CL
1031:User/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
1032:User/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
1033:User/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
1034:User/system_stm32f10x.c ****         
1035:User/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
1036:User/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
1037:User/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
1038:User/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
1039:User/system_stm32f10x.c ****   
1040:User/system_stm32f10x.c ****     /* Enable PLL2 */
1041:User/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
1042:User/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
1043:User/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
1044:User/system_stm32f10x.c ****     {
1045:User/system_stm32f10x.c ****     }
1046:User/system_stm32f10x.c ****     
1047:User/system_stm32f10x.c ****    
1048:User/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 72 MHz */ 
1049:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
1050:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
1051:User/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
1052:User/system_stm32f10x.c **** #else    
1053:User/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 27


1054:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
 431              		.loc 1 1054 15
 432 0094 184B     		ldr	r3, .L25
 433 0096 5B68     		ldr	r3, [r3, #4]
 434 0098 174A     		ldr	r2, .L25
 435 009a 23F47C13 		bic	r3, r3, #4128768
 436 009e 5360     		str	r3, [r2, #4]
1055:User/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
1056:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
 437              		.loc 1 1056 15
 438 00a0 154B     		ldr	r3, .L25
 439 00a2 5B68     		ldr	r3, [r3, #4]
 440 00a4 144A     		ldr	r2, .L25
 441 00a6 43F4E813 		orr	r3, r3, #1900544
 442 00aa 5360     		str	r3, [r2, #4]
1057:User/system_stm32f10x.c **** #endif /* STM32F10X_CL */
1058:User/system_stm32f10x.c **** 
1059:User/system_stm32f10x.c ****     /* Enable PLL */
1060:User/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 443              		.loc 1 1060 13
 444 00ac 124B     		ldr	r3, .L25
 445 00ae 1B68     		ldr	r3, [r3]
 446 00b0 114A     		ldr	r2, .L25
 447 00b2 43F08073 		orr	r3, r3, #16777216
 448 00b6 1360     		str	r3, [r2]
1061:User/system_stm32f10x.c **** 
1062:User/system_stm32f10x.c ****     /* Wait till PLL is ready */
1063:User/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 449              		.loc 1 1063 10
 450 00b8 00BF     		nop
 451              	.L22:
 452              		.loc 1 1063 15 discriminator 1
 453 00ba 0F4B     		ldr	r3, .L25
 454 00bc 1B68     		ldr	r3, [r3]
 455              		.loc 1 1063 20 discriminator 1
 456 00be 03F00073 		and	r3, r3, #33554432
 457              		.loc 1 1063 10 discriminator 1
 458 00c2 002B     		cmp	r3, #0
 459 00c4 F9D0     		beq	.L22
1064:User/system_stm32f10x.c ****     {
1065:User/system_stm32f10x.c ****     }
1066:User/system_stm32f10x.c ****     
1067:User/system_stm32f10x.c ****     /* Select PLL as system clock source */
1068:User/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 460              		.loc 1 1068 15
 461 00c6 0C4B     		ldr	r3, .L25
 462 00c8 5B68     		ldr	r3, [r3, #4]
 463 00ca 0B4A     		ldr	r2, .L25
 464 00cc 23F00303 		bic	r3, r3, #3
 465 00d0 5360     		str	r3, [r2, #4]
1069:User/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 466              		.loc 1 1069 15
 467 00d2 094B     		ldr	r3, .L25
 468 00d4 5B68     		ldr	r3, [r3, #4]
 469 00d6 084A     		ldr	r2, .L25
 470 00d8 43F00203 		orr	r3, r3, #2
 471 00dc 5360     		str	r3, [r2, #4]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 28


1070:User/system_stm32f10x.c **** 
1071:User/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
1072:User/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 472              		.loc 1 1072 11
 473 00de 00BF     		nop
 474              	.L23:
 475              		.loc 1 1072 16 discriminator 1
 476 00e0 054B     		ldr	r3, .L25
 477 00e2 5B68     		ldr	r3, [r3, #4]
 478              		.loc 1 1072 23 discriminator 1
 479 00e4 03F00C03 		and	r3, r3, #12
 480              		.loc 1 1072 11 discriminator 1
 481 00e8 082B     		cmp	r3, #8
 482 00ea F9D1     		bne	.L23
 483              	.L24:
1073:User/system_stm32f10x.c ****     {
1074:User/system_stm32f10x.c ****     }
1075:User/system_stm32f10x.c ****   }
1076:User/system_stm32f10x.c ****   else
1077:User/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
1078:User/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
1079:User/system_stm32f10x.c ****   }
1080:User/system_stm32f10x.c **** }
 484              		.loc 1 1080 1
 485 00ec 00BF     		nop
 486 00ee 0C37     		adds	r7, r7, #12
 487              	.LCFI13:
 488              		.cfi_def_cfa_offset 4
 489 00f0 BD46     		mov	sp, r7
 490              	.LCFI14:
 491              		.cfi_def_cfa_register 13
 492              		@ sp needed
 493 00f2 80BC     		pop	{r7}
 494              	.LCFI15:
 495              		.cfi_restore 7
 496              		.cfi_def_cfa_offset 0
 497 00f4 7047     		bx	lr
 498              	.L26:
 499 00f6 00BF     		.align	2
 500              	.L25:
 501 00f8 00100240 		.word	1073876992
 502 00fc 00200240 		.word	1073881088
 503              		.cfi_endproc
 504              	.LFE68:
 506              		.text
 507              	.Letext0:
 508              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 509              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 510              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 511              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f10x.h"
 512              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f10x.h"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f10x.c
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:22     .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:19     .data.SystemCoreClock:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:29     .data.AHBPrescTable:00000000 AHBPrescTable
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:26     .data.AHBPrescTable:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:33     .text.SystemInit:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:39     .text.SystemInit:00000000 SystemInit
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:295    .text.SetSysClock:00000000 SetSysClock
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:104    .text.SystemInit:0000005c $d
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:111    .text.SystemCoreClockUpdate:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:117    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:281    .text.SystemCoreClockUpdate:000000d0 $d
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:290    .text.SetSysClock:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:323    .text.SetSysClockTo72:00000000 SetSysClockTo72
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:318    .text.SetSysClockTo72:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cczTlxgI.s:501    .text.SetSysClockTo72:000000f8 $d

NO UNDEFINED SYMBOLS
